{"ast":null,"code":"import axios from \"axios\";\nexport const setAuthorisationHeader = () => {\n  axios.interceptors.request.use(config => {\n    const token = sessionStorage.getItem('token');\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};","map":{"version":3,"names":["axios","setAuthorisationHeader","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/SNEHA RATHOD/Desktop/CCEE/CloudCuisine2/CloudCuisine/CloudCuisine/Frontend/CloudCuisine/src/security/SetAuthorisationHeader.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const setAuthorisationHeader = () =>{\r\n    axios.interceptors.request.use(\r\n      (config) => {\r\n        \r\n        const token = sessionStorage.getItem('token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n    \r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAK;EACvCD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACGC,MAAD,IAAY;IAEV,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;;IACA,IAAIF,KAAJ,EAAW;MACTD,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;IACD;;IAED,OAAOD,MAAP;EACD,CATH,EAUGM,KAAD,IAAW;IACT,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;EACD,CAZH;AAcD,CAfI"},"metadata":{},"sourceType":"module"}